# 开发环境 Docker Compose 覆盖文件
# 用于开发环境，包含代码热更新和调试配置

version: '3.8'

services:
  # MySQL数据库 - 开发环境配置
  mysql:
    container_name: enterprise_mysql_dev
    ports:
      - "3308:3306"  # 开发环境使用不同端口
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-devpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-enterprise_dev}
      MYSQL_USER: ${MYSQL_USER:-dev_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-dev_password}
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - enterprise_network

  # 后端API服务 - 开发环境配置
  backend:
    container_name: enterprise_backend_dev
    ports:
      - "8002:8000"  # 开发环境使用不同端口
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://dev_user:dev_password@mysql:3306/enterprise_dev}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-2024}
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:3001", "http://localhost:3002", "http://dev.yourdomain.com:8080"]
      - LOG_LEVEL=DEBUG
      - LOG_FILE=logs/app_dev.log
      - WORKERS=1  # 开发环境使用单worker便于调试
    volumes:
      # 开发环境挂载代码目录，支持热更新
      - ./enterprise-backend:/app
      - backend_dev_uploads:/app/uploads
      - backend_dev_logs:/app/logs
    networks:
      - enterprise_network

  # 前端服务 - 开发环境配置
  frontend:
    container_name: enterprise_frontend_dev
    ports:
      - "3002:80"  # 开发环境使用不同端口
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8002/api}
      - VITE_APP_TITLE=企业官网-开发环境
    volumes:
      # 开发环境挂载代码目录，支持热更新
      - ./enterprise-frontend:/app
    networks:
      - enterprise_network

  # Nginx反向代理 - 开发环境配置
  nginx:
    container_name: enterprise_nginx_dev
    ports:
      - "8080:80"  # 开发环境端口
      - "8444:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - enterprise_network

# 开发环境专用数据卷
volumes:
  mysql_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local
  backend_dev_logs:
    driver: local 