name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - production
      version:
        description: 'Image version (default: latest)'
        required: false
        default: 'latest'
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push images
      run: |
        # Build backend
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.event.inputs.version }} \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest \
          --push \
          ./enterprise-backend
        
        # Build frontend
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.event.inputs.version }} \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest \
          --push \
          ./enterprise-frontend

    - name: Deploy to ${{ github.event.inputs.environment }}
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets[format('{0}_SERVER_HOST', github.event.inputs.environment)] }}
        username: ${{ secrets[format('{0}_SERVER_USER', github.event.inputs.environment)] }}
        key: ${{ secrets[format('{0}_SERVER_SSH_KEY', github.event.inputs.environment)] }}
        script: |
          cd /var/www/enterprise
          
          # Pull latest code
          git pull origin ${{ github.ref_name }}
          
          # Set environment variables
          export ENVIRONMENT=${{ github.event.inputs.environment }}
          export IMAGE_VERSION=${{ github.event.inputs.version }}
          
          if [ "${{ github.event.inputs.environment }}" = "test" ]; then
            export DATABASE_URL="${{ secrets.TEST_DATABASE_URL }}"
            export SECRET_KEY="${{ secrets.TEST_SECRET_KEY }}"
          elif [ "${{ github.event.inputs.environment }}" = "production" ]; then
            export DATABASE_URL="${{ secrets.PROD_DATABASE_URL }}"
            export SECRET_KEY="${{ secrets.PROD_SECRET_KEY }}"
            export MYSQL_ROOT_PASSWORD="${{ secrets.PROD_MYSQL_ROOT_PASSWORD }}"
            export MYSQL_PASSWORD="${{ secrets.PROD_MYSQL_PASSWORD }}"
            export VITE_API_BASE_URL="${{ secrets.PROD_VITE_API_BASE_URL }}"
          fi
          
          # Deploy
          ./deploy.sh ${{ github.event.inputs.environment }} up
          
          # Health check
          sleep 30
          ./deploy.sh ${{ github.event.inputs.environment }} status

    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
